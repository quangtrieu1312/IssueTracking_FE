{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/_models/alert.ts","webpack:///src/app/_models/cron-to-text-request.ts","webpack:///src/app/_models/signup-request.ts","webpack:///src/app/_models/ticket-info.ts","webpack:///src/app/_models/ticket-request.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/new-ticket/new-ticket.component.ts","webpack:///src/app/new-ticket/new-ticket.component.html","webpack:///src/app/new-ticket/new-ticket.service.ts","webpack:///src/app/shared-data/search.service.ts","webpack:///src/app/shared-data/timezone.service.ts","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/signup/signup.service.ts","webpack:///src/app/single-ticket/single-ticket.component.ts","webpack:///src/app/single-ticket/single-ticket.component.html","webpack:///src/app/single-ticket/single-ticket.service.ts","webpack:///src/app/tickets/tickets.component.ts","webpack:///src/app/tickets/tickets.component.html","webpack:///src/app/tickets/tickets.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","Alert","CronToTextRequest","SignupRequest","TicketInfo","TicketRequest","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","hasBackdrop","declarations","providers","bootstrap","AuthGuardService","authService","router","route","state","isUserLoggedIn","navigate","queryParams","returnUrl","url","providedIn","AuthComponent","authRequest","username","password","errorMsg","hasError","subscribe","params","navigateByUrl","authenticateUser","result","status","registerSuccessfulLogin","error","msg","logout","handleLogin","AuthService","http","USER_NAME_SESSION_ATTRIBUTE_NAME","loginUrl","logoutUrl","httpOptions","headers","withCredentials","user","post","sessionStorage","setItem","removeItem","get","getItem","DialogComponent","dialogRef","data","close","confirm","onNoClick","onYesClick","HomeComponent","NavBarComponent","searchService","changeSearchBox","searchBox","NewTicketComponent","newTicketService","timezoneService","statuses","value","view","newticket","ticket","alert","emails","members","cronToText","addMemberSuccess","ghostMembers","timezones","dataLoaded","name","mode","timezone","cronExpression","description","owner","ticketId","JSON","parse","stringify","getTimezones","forEach","element","push","Timezone","length","checked","split","RegExp","filter","str","postTicket","ticketsInfo","includes","NewTicketService","ticketUrl","cronToTextRequest","ticketRequest","SearchService","currentSearchBox","asObservable","next","TimezoneService","timezoneUrl","SignupComponent","signupService","signupRequest","successMsg","handleSignup","SignupService","signupUrl","SingleTicketComponent","singleTicketService","dialog","newname","newstatus","newmode","newcron","newtimezone","newmembers","newemails","newdescription","newalert","getTicket","join","putTicket","open","width","afterClosed","handleDelete","deleteTicket","SingleTicketService","userUrl","userIds","put","delete","TicketsComponent","ticketsService","sortAttribute","direction","pageIndex","pageSize","totalPages","displayedColumns","subscription","getAllTickets","tickets","content","setAlert","goToNewTicket","getPreviousPage","getNextPage","TicketsService","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export class Alert{\r\n    mode: Boolean;\r\n    timezone: String;\r\n    cronExpression: String;\r\n}\r\n","export class CronToTextRequest {\r\n    expression: String\r\n}\r\n","export class SignupRequest{\r\n    username: String;\r\n    password: String;\r\n    password2: String;\r\n    email: String;\r\n}\r\n","import { Alert } from './alert';\r\n\r\nexport class TicketInfo{\r\n    ticketId: String;\r\n    owner: String;\r\n    name: String;\r\n    status: String;\r\n    description: String;\r\n    alert: Alert;\r\n    emails: String[];\r\n    members: String[];\r\n\r\n}","import { Alert } from './alert';\r\n\r\nexport class TicketRequest{\r\n    name: String;\r\n    status: String;\r\n    description: String;\r\n    alert: Alert;\r\n    emails: String[];\r\n    members: String[];\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { TicketsComponent } from './tickets/tickets.component';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { AuthComponent } from './auth/auth.component';\nimport { SingleTicketComponent } from './single-ticket/single-ticket.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { NewTicketComponent } from './new-ticket/new-ticket.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: AuthComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'ticket', component: TicketsComponent, canActivate: [AuthGuardService] },\n  { path: 'new-ticket', component: NewTicketComponent, canActivate: [AuthGuardService] },\n  { path: 'ticket/:ticketId', component: SingleTicketComponent, canActivate: [AuthGuardService] },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', redirectTo: '/home' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'webpage';\n}\n","<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { HomeComponent } from './home/home.component';\nimport { TicketsComponent } from './tickets/tickets.component';\nimport { AuthService } from './auth/auth.service';\nimport { TicketsService } from './tickets/tickets.service';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle'\nimport { MatGridListModule } from '@angular/material/grid-list'\nimport { MatTableModule } from '@angular/material/table';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon'\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogRef, MatDialogModule, MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog'\n\nimport { SingleTicketComponent } from './single-ticket/single-ticket.component';\nimport { SingleTicketService } from './single-ticket/single-ticket.service';\nimport { SignupComponent } from './signup/signup.component';\nimport { NewTicketComponent } from './new-ticket/new-ticket.component';\nimport { DialogComponent } from './dialog/dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    AuthComponent,\n    HomeComponent,\n    TicketsComponent,\n    SingleTicketComponent,\n    SignupComponent,\n    NewTicketComponent,\n    DialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    DragDropModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n    MatTableModule,\n    MatCardModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatDialogModule\n  ],\n  providers: [AuthService, TicketsService, SingleTicketService,\n    {\n      provide: MatDialogRef,\n      useValue: []\n    },\n    {\n      provide: MAT_DIALOG_DATA,\n      useValue: []\n    },\n    {\n      provide: MAT_DIALOG_DEFAULT_OPTIONS,\n      useValue: { hasBackdrop: false }\n    }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.authService.isUserLoggedIn()) {\n      // logged in so return true\n      return true;\n    }\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthRequest } from '../_models/auth-request';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n  authRequest: AuthRequest = {\n    username: '',\n    password: ''\n  };\n  returnUrl: string;\n  errorMsg: string = '';\n  hasError: boolean = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    // Get the query params\n    if (!this.isUserLoggedIn()) {\n      this.route.queryParams.subscribe(params => this.returnUrl = params['returnUrl'] || '/home');\n    }\n    else {\n      this.route.queryParams.subscribe(params => this.returnUrl = '/home');\n      this.router.navigateByUrl(this.returnUrl);\n    }\n  }\n\n  isUserLoggedIn() {\n    return this.authService.isUserLoggedIn();\n  }\n  handleLogin() {\n    this.authService.authenticateUser(this.authRequest).subscribe((result) => {\n      if (result.status === 'true') {\n        this.authService.registerSuccessfulLogin(this.authRequest.username);\n        this.router.navigateByUrl(this.returnUrl);\n      }\n    }, (result) => {\n      this.hasError = true;\n      this.errorMsg = result.error.msg;\n    })\n  }\n\n  handleLogout() {\n    this.authService.logout();\n  }\n\n}\n","<div class=\"container col-lg-6\">\n    <h1 class=\"text-center\">Login</h1>\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form class=\"form-group\">\n                <div class=\"form-group\">\n                    <label for=\"email\">User Name :</label>\n                    <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"authRequest.username\"\n                        placeholder=\"Demo username: user001demo\" name=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"pwd\">Password:</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"authRequest.password\"\n                        placeholder=\"Demo password: P@ssw0rd123\" name=\"password\">\n                </div>\n                <div class=\"button-wrapper\">\n                    <button (click)=handleLogin() class=\"btn btn-dark\">Login</button>\n                </div>\n                <div class=\"button-wrapper\">\n                    <button [routerLink]=\"'/signup'\" class=\"btn btn-dark\">Signup</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"error\" *ngIf='hasError'>\n        <p>{{errorMsg}}</p>\n    </div>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthRequest } from '../_models/auth-request';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // BASE_PATH: 'http://localhost:8080'\n  USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\n  loginUrl = 'https://mysterious-reaches-08183.herokuapp.com/login';\n\n  logoutUrl = 'https://mysterious-reaches-08183.herokuapp.com/logout';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n  public user: String;\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  authenticateUser(authRequest: AuthRequest): Observable<any> {\n    this.user = authRequest.username;\n    return this.http.post<AuthRequest>(this.loginUrl, authRequest, this.httpOptions);\n  }\n\n\n  registerSuccessfulLogin(user) {\n    sessionStorage.setItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME, user)\n  }\n\n  logout() {\n    sessionStorage.removeItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME);\n    this.user = null;\n    this.http.get(this.logoutUrl, this.httpOptions);\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) { return false; }\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem(this.USER_NAME_SESSION_ATTRIBUTE_NAME)\n    if (user === null) { return ''; }\n    return user;\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SingleTicketComponent } from '../single-ticket/single-ticket.component';\nexport interface DialogData {\n  confirm: boolean;\n}\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<SingleTicketComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick(){\n    this.data.confirm = true;\n    this.dialogRef.close(this.data.confirm);\n  }\n\n}\n","<h1 mat-dialog-title>Confirmation</h1>\n<div mat-dialog-content>\n  <p>Do you want to confirm action?</p>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">No</button>\n  <button mat-button (click)=\"onYesClick()\" cdkFocusInitial>Yes</button>\n</div>","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  \n  constructor() {\n\n  }\n\n}","<div class=\"image\"></div>\r\n<mat-card class=\"centered\">\r\n    <mat-card-content>\r\n        <h1 style=\"text-align: center; color:white;\">Issue Tracking System</h1>\r\n        <h3 style=\"text-align: center; color:white\">Inspired by JIRA</h3>\r\n    </mat-card-content>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { ActivatedRoute, Router, NavigationEnd } from '@angular/router';\nimport { SearchService } from '../shared-data/search.service';\n\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private authService: AuthService,\n    private searchService: SearchService) { }\n\n  searchBox: string;\n\n  mySubscription: any;\n\n  ngOnInit() {\n  }\n\n  handleLogout() {\n    this.authService.logout();\n    this.router.navigateByUrl('/home');\n  }\n\n  isUserLoggedIn() {\n    return this.authService.isUserLoggedIn();\n  }\n\n  isAtTickets() {\n    return this.router.url === '/ticket';\n  }\n\n  searchNameOrDescription() {\n    this.searchService.changeSearchBox(this.searchBox);\n    this.router.navigateByUrl('ticket');\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" routerLink=\"home\">\n        <img src=\"/assets/image/favicon.png\" alt=\"\">\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" routerLink=\"home\" routerLinkActive=\"active\">Home</a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" href=\"http://trieutruong.com\" routerLinkActive=\"active\">About me</a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isUserLoggedIn()'>\n                <a class=\"nav-link\" routerLink=\"ticket\" routerLinkActive=\"active\">Ticket</a>\n            </li>\n            <li class=\"nav-item\" *ngIf='isUserLoggedIn()'>\n                <button class=\"btn btn-outline-light\" (click)=handleLogout()>Logout</button>\n            </li>\n            <li class=\"nav-item\" *ngIf='!isUserLoggedIn()'>\n                <a class=\"nav-link\" routerLink=\"login\" routerLinkActive=\"active\">Try it out</a>\n            </li>\n        </ul>\n        <form class=\"form-inline my-2 my-lg-0\" *ngIf=\"isAtTickets()\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Ticket name, description\" aria-label=\"Search\"\n                [(ngModel)]=\"searchBox\" name=\"searchBox\">\n            <button class=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\"\n                (click)=\"searchNameOrDescription()\">Search</button>\n        </form>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { NewTicketService } from './new-ticket.service';\nimport { Alert } from '../_models/alert';\nimport { TimezoneService } from '../shared-data/timezone.service';\n\n@Component({\n  selector: 'app-new-ticket',\n  templateUrl: './new-ticket.component.html',\n  styleUrls: ['./new-ticket.component.css']\n})\nexport class NewTicketComponent implements OnInit {\n  statuses: any[] =\n    [\n      {\n        value: 'NEW',\n        view: 'NEW'\n      },\n      {\n        value: 'ADMITTED',\n        view: 'ADMITTED'\n      },\n      {\n        value: 'IN_PROCESS',\n        view: 'IN PROCESS'\n      },\n      {\n        value: 'ON_HOLD',\n        view: 'ON HOLD'\n      },\n      {\n        value: 'REVISED',\n        view: 'REVISED'\n      },\n      {\n        value: 'SOLVED',\n        view: 'SOLVED'\n      },\n      {\n        value: 'CLOSED',\n        view: 'CLOSED'\n      }\n    ];\n\n  newticket: TicketInfo = new TicketInfo();\n  ticket: TicketInfo = new TicketInfo();\n  alert: Alert = new Alert();\n  emails: String = '';\n  members: String = '';\n  cronToText: String = '';\n  addMemberSuccess = true;\n  ghostMembers = [];\n  timezones = [];\n  dataLoaded = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private newTicketService: NewTicketService,\n    private timezoneService: TimezoneService) {\n  }\n\n\n  ngOnInit(): void {\n    this.ticket.name = 'Ticket example';\n    this.alert.mode = true;\n    this.alert.timezone = 'US/Central';\n    this.alert.cronExpression = '0 1 2 3 4 ? *';\n    this.ticket.alert = this.alert;\n    this.ticket.emails = ['myemail@example.com', 'youremail@example.com'];\n    this.ticket.members = ['myusername', 'yourusername'];\n    this.ticket.description = 'Cron expression format' +\n      '-------- Sec | Min | Hour |\tDay Of Month | Month | Day Of Week | Year --------' +\n      '0 1 2 3 4 ? *: At 02:01:00am, on the 3rd day, in April, in every year. --------' +\n      'For more information, visit: https://www.freeformatter.com/cron-expression-generator-quartz.html#cronconverttotext';\n    this.ticket.owner = 'Click top right corner to fill in form';\n    this.ticket.status = 'NEW';\n    this.ticket.ticketId = 'ExampleId';\n    this.newticket = JSON.parse(JSON.stringify(this.ticket));\n    this.newticket.description = '';\n    this.getTimezones();\n  }\n\n  getTimezones() {\n    this.timezoneService.getTimezones().subscribe(result => {\n      result.timezones.forEach(element => {\n        this.timezones.push(new Timezone(element, element));\n        this.dataLoaded = true;\n      });\n    });\n  }\n\n  goToTicketList() {\n    this.router.navigateByUrl('ticket');\n  }\n\n  hasMembers() {\n    return this.ticket.members != null && this.ticket.members.length != 0;\n  }\n\n  hasEmails() {\n    return this.ticket.emails != null && this.ticket.emails.length != 0;\n  }\n\n  setTicketMode(e) {\n    if (e.checked) {\n      this.ticket.alert.mode = true;\n    } else {\n      this.ticket.alert.mode = false;\n    }\n  }\n  handleSave() {\n    this.newticket.members = this.members.split(new RegExp('[,; ]')).filter(function (str) {\n      return str != null && str != '';\n    });\n    this.newticket.emails = this.emails.split(new RegExp('[,; ]')).filter(function (str) {\n      return str != null && str != '';\n    });\n    this.newTicketService.postTicket(this.newticket).subscribe((result) => {\n      this.ticket = result.ticketsInfo[0];\n      this.addMemberSuccess = true;\n      this.ghostMembers = [];\n      this.newticket.members.forEach(element => {\n        if (!this.ticket.members.includes(element)) {\n          this.addMemberSuccess = false;\n          this.ghostMembers.push(element);\n        }\n      });\n      if (this.addMemberSuccess) {\n        this.router.navigateByUrl('ticket');\n      }\n    }, (result) => {\n\n    })\n  }\n\n}\nfunction Timezone(value: String, view: String) {\n  this.value = value;\n  this.view = view;\n}","<mat-card class=\"example-card\" *ngIf='dataLoaded'>\n    <mat-card-header style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n        <mat-card-title style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n            {{ticket.name}}\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{ticket.owner}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p><b>Status: </b>{{ticket.status}}</p>\n\n        <p><b>Alert: </b>\n            <mat-slide-toggle [(ngModel)]='ticket.alert.mode' (change)='setTicketMode($event)'></mat-slide-toggle>\n        </p>\n        <p><b>Cron Expression:</b> {{ticket.alert.cronExpression}}</p>\n        <p><b>Time zone:</b> {{ticket.alert.timezone}}</p>\n        <div *ngIf='hasMembers()'>\n            <b>Members: </b>\n            <ng-container *ngFor='let member of ticket.members'\n                style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                <div class=\"member\" style=\"display:inline-block;\">{{member}};</div>\n            </ng-container>\n        </div>\n        <div *ngIf='hasEmails()'>\n            <b>Extra emails: </b>\n            <ng-container *ngFor='let email of ticket.emails' style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                <p class=\"email\" style=\"display:inline-block;\">{{email}};</p>\n            </ng-container>\n        </div>\n        <p style=\"min-width: 320px ;max-width: 4000px; width: 100%;\"><b>Description: </b>{{ticket.description}}</p>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n            <mat-expansion-panel-header style=\"position: absolute; right: 0px; top: 0px;\"></mat-expansion-panel-header>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <input matInput placeholder=\"Ticket name\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\"\n                        [(ngModel)]=\"newticket.name\">\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"newticket.status\">\n                        <mat-option *ngFor=\"let status of statuses\"\n                            style=\"min-width: 320px ;max-width: 2048px; width: 100%;\" [value]=\"status.value\">\n                            {{status.view}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Cron Expression\" [(ngModel)]=\"newticket.alert.cronExpression\">\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <mat-label>Time zone</mat-label>\n                    <mat-select [(ngModel)]=\"newticket.alert.timezone\">\n                        <mat-option *ngFor=\"let tz of timezones\"\n                            style=\"min-width: 320px ;max-width: 2048px; width: 100%;\" [(value)]='tz.value'>\n                            {{tz.view}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Members\" [(ngModel)]=\"members\">\n                    <div *ngIf=\"!addMemberSuccess && members!=''\" class=\"alert alert-danger\">\n                        <div [hidden]=\"addMemberSuccess || members===''\">\n                            Cannot find members {{ghostMembers}}\n                        </div>\n                    </div>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Extra emails\" [(ngModel)]=\"emails\"\n                        pattern=\"([a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}[;, ]{0,})+\" ngModel #emailref=\"ngModel\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"alert alert-danger\">\n                        <div [hidden]=\"!emailref.errors?.pattern\">\n                            Invalid email\n                        </div>\n                    </div>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                    <textarea matInput placeholder=\"Description\" rows=\"5\" cols=\"40\"\n                        [(ngModel)]=\"newticket.description\"></textarea>\n                </mat-form-field>\n            </div>\n        </mat-expansion-panel>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n        <button mat-button routerLink=\"/ticket\">BACK</button>\n        <button mat-button (click)=\"handleSave()\" [disabled]=\"emailref.errors?.pattern\">SAVE</button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { TicketRequest } from '../_models/ticket-request';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CronToTextRequest } from '../_models/cron-to-text-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewTicketService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n\n  ticketUrl = 'https://mysterious-reaches-08183.herokuapp.com/ticket';\n\n  constructor(private http: HttpClient) { }\n\n  cronToTextRequest : CronToTextRequest = new CronToTextRequest();\n  ticketRequest: TicketRequest = new TicketRequest();\n  postTicket(ticket: TicketInfo): Observable<any> {\n    this.ticketRequest.name = ticket.name;\n    this.ticketRequest.status = ticket.status;\n    this.ticketRequest.alert = ticket.alert;\n    this.ticketRequest.members = ticket.members;\n    this.ticketRequest.emails = ticket.emails;\n    this.ticketRequest.description = ticket.description;\n    return this.http.post<TicketInfo>(this.ticketUrl, this.ticketRequest, this.httpOptions);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  private searchBox = new BehaviorSubject('');\n  currentSearchBox = this.searchBox.asObservable();\n  constructor() { }\n\n  changeSearchBox(searchBox: string){\n    this.searchBox.next(searchBox);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimezoneService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n\n  timezoneUrl = 'https://mysterious-reaches-08183.herokuapp.com/timezone';\n\n  constructor(private http: HttpClient) { }\n\n  getTimezones(): Observable<any> {\n    return this.http.get(this.timezoneUrl, this.httpOptions);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SignupRequest } from '../_models/signup-request';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SignupService } from './signup.service';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signupRequest: SignupRequest = new SignupRequest();\n  returnUrl: string;\n  errorMsg: string = '';\n  hasError: boolean = false;\n  successMsg: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private signupService: SignupService,\n    private authService: AuthService) { }\n\n  ngOnInit() {\n    if (!this.isUserLoggedIn()) {\n      this.route.queryParams.subscribe(params => this.returnUrl = params['returnUrl'] || '/home');\n    }\n    else {\n      this.route.queryParams.subscribe(() => this.returnUrl = '/home');\n      this.router.navigateByUrl(this.returnUrl);\n    }\n  }\n\n  isUserLoggedIn() {\n    return this.authService.isUserLoggedIn();\n  }\n  handleSignup() {\n    this.signupService.handleSignup(this.signupRequest).subscribe((result) => {\n      this.router.navigateByUrl(this.returnUrl);\n    }, (result) => {\n      this.hasError = true;\n      this.errorMsg = result.error.msg;\n    });\n  }\n}\n","<div class=\"container col-lg-6\">\n    <h1 class=\"text-center\">Register</h1>\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <form class=\"form-group\">\n                <div class=\"form-group\">\n                    <label for=\"email\">Username :</label>\n                    <input type=\"text\" class=\"form-control\" id=\"username\" [(ngModel)]=\"signupRequest.username\"\n                        placeholder=\"Enter username\" name=\"username\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email :</label>\n                    <input type=\"text\" class=\"form-control\" type=\"email\" name=\"email\"\n                        pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" [(ngModel)]=\"signupRequest.email\"\n                        placeholder=\"Enter email\" ngModel #emailref=\"ngModel\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"alert alert-danger\">\n                        <div [hidden]=\"!emailref.errors?.pattern\">\n                            Invalid email\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"pwd\">Password:</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password\" [(ngModel)]=\"signupRequest.password\"\n                        placeholder=\"Enter password\" name=\"password\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"pwd\">Re-enter password:</label>\n                    <input type=\"password\" class=\"form-control\" id=\"password2\" [(ngModel)]=\"signupRequest.password2\"\n                        placeholder=\"Re-enter password\" name=\"password\">\n                </div>\n                <div class=\"button-wrapper\">\n                    <button class=\"btn btn-dark\" (click)=\"handleSignup()\" [disabled]=\"emailref.errors?.pattern\"\n                        style=\"margin: auto; display:block;\">Signup</button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"error\" *ngIf='hasError'>\n        <p>{{errorMsg}}</p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { SignupRequest } from '../_models/signup-request';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n  signupUrl = 'https://mysterious-reaches-08183.herokuapp.com/signup';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  handleSignup(signupRequest: SignupRequest): Observable<any> {\n    return this.http.post<SignupRequest>(this.signupUrl, signupRequest, this.httpOptions);\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SingleTicketService } from './single-ticket.service';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { Alert } from '../_models/alert';\nimport 'moment-timezone';\nimport { TimezoneService } from '../shared-data/timezone.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DialogComponent } from '../dialog/dialog.component';\n\n\n@Component({\n  selector: 'app-single-ticket',\n  templateUrl: './single-ticket.component.html',\n  styleUrls: ['./single-ticket.component.css']\n})\nexport class SingleTicketComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private singleTicketService: SingleTicketService,\n    private timezoneService: TimezoneService,\n    public dialog: MatDialog) {\n    this.route.params.subscribe(params => this.ticketId = params.ticketId);\n  }\n  newticket: TicketInfo = new TicketInfo();\n  newname: String = '';\n  newstatus: String = '';\n  newmode: Boolean = false;\n  newcron: String = '';\n  newtimezone: String = '';\n  newmembers: String = '';\n  newemails: String = '';\n  newdescription: String = '';\n  newalert: Alert = new Alert();\n  dataLoaded = false;\n  ticket: TicketInfo = new TicketInfo();\n  ticketId: String = '';\n  addMemberSuccess = true;\n  ghostMembers = [];\n  statuses: any[] =\n    [\n      {\n        value: 'NEW',\n        view: 'NEW'\n      },\n      {\n        value: 'ADMITTED',\n        view: 'ADMITTED'\n      },\n      {\n        value: 'IN_PROCESS',\n        view: 'IN PROCESS'\n      },\n      {\n        value: 'ON_HOLD',\n        view: 'ON HOLD'\n      },\n      {\n        value: 'REVISED',\n        view: 'REVISED'\n      },\n      {\n        value: 'SOLVED',\n        view: 'SOLVED'\n      },\n      {\n        value: 'CLOSED',\n        view: 'CLOSED'\n      }\n    ];\n  timezones = [];\n  ngOnInit(): void {\n    this.getTicket(this.ticketId);\n\n  }\n\n  getTimezones() {\n    this.timezoneService.getTimezones().subscribe(result => {\n      result.timezones.forEach(element => {\n        this.timezones.push(new Timezone(element, element));\n        this.dataLoaded = true;\n      });\n    });\n  }\n  getTicket(ticketId: String) {\n    this.singleTicketService.getTicket(ticketId).subscribe((result) => {\n      this.ticket = result.ticketsInfo[0];\n      this.newname = this.ticket.name;\n      this.newstatus = this.ticket.status;\n      this.newmode = false;\n      this.newcron = this.ticket.alert.cronExpression;\n      this.newtimezone = this.ticket.alert.timezone;\n      if (this.ticket.members != null) {\n        this.newmembers = this.ticket.members.join('; ');\n      }\n      if (this.ticket.emails != null) {\n        this.newemails = this.ticket.emails.join('; ');\n      }\n      this.newdescription = this.ticket.description;\n      this.getTimezones();\n    });\n  }\n\n  handleSave() {\n    this.newticket.ticketId = this.ticket.ticketId;\n    this.newticket.name = this.newname;\n    this.newticket.status = this.newstatus;\n    this.newmode = this.ticket.alert.mode;\n    this.newalert.mode = this.newmode;\n    this.newalert.timezone = this.newtimezone;\n    this.newalert.cronExpression = this.newcron;\n    this.newticket.alert = this.newalert;\n    this.newticket.description = this.newdescription;\n    this.newticket.members = this.newmembers.split(new RegExp('[,; ]')).filter(function (str) {\n      return str != null && str != \"\";\n    });\n    this.newticket.emails = this.newemails.split(new RegExp('[,; ]')).filter(function (str) {\n      return str != null && str != \"\";\n    });\n\n    this.singleTicketService.putTicket(this.newticket).subscribe((result) => {\n      this.ticket = result.ticketsInfo[0];\n      this.addMemberSuccess = true;\n      this.ghostMembers = [];\n      this.newticket.members.forEach(element => {\n        if (!this.ticket.members.includes(element)) {\n          this.addMemberSuccess = false;\n          this.ghostMembers.push(element);\n        }\n      });\n      if (this.addMemberSuccess) {\n        this.router.navigateByUrl('ticket');\n      }\n    })\n  }\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogComponent, {\n      width: '300px',\n      data: { confirm: false }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === true) {\n        this.handleDelete();\n      }\n    });\n  }\n\n  handleDelete() {\n    this.singleTicketService.deleteTicket(this.ticket.ticketId).subscribe((result) => {\n      this.router.navigateByUrl('/ticket');\n    }, (result) => {\n\n    })\n\n  }\n\n  timeZoneChanged(timezone: String): void {\n    this.newtimezone = timezone;\n  }\n\n  setTicketMode(e) {\n    if (e.checked) {\n      this.ticket.alert.mode = true;\n    } else {\n      this.ticket.alert.mode = false;\n    }\n  }\n\n}\nfunction Timezone(value: String, view: String) {\n  this.value = value;\n  this.view = view;\n}\n\n","<mat-card class=\"example-card\" *ngIf='dataLoaded'>\n    <mat-card-header style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n        <mat-card-title style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n            {{ticket.name}}\n        </mat-card-title>\n        <mat-card-subtitle>\n            {{ticket.owner}}\n        </mat-card-subtitle>\n    </mat-card-header>\n    <mat-card-content>\n        <p><b>Status: </b>{{ticket.status}}</p>\n\n        <p><b>Alert: </b>\n            <mat-slide-toggle [(ngModel)]='ticket.alert.mode' (change)='setTicketMode($event)'></mat-slide-toggle>\n        </p>\n        <p><b>Cron expression:</b> {{ticket.alert.cronExpression}}</p>\n        <p><b>Time zone:</b> {{ticket.alert.timezone}}</p>\n        <p>\n            <b>Members: </b>\n            <ng-container *ngFor='let member of ticket.members'\n                style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                <div class=\"member\" style=\"display:inline-block;\">{{member}};</div>\n            </ng-container>\n        </p>\n        <p>\n            <b>Extra emails: </b>\n            <ng-container *ngFor='let email of ticket.emails' style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                <p class=\"email\" style=\"display:inline-block;\">{{email}};</p>\n            </ng-container>\n        </p>\n        <p style=\"min-width: 320px ;max-width: 4000px; width: 100%;\"><b>Description: </b>{{ticket.description}}</p>\n        <mat-expansion-panel class=\"mat-elevation-z0\">\n            <mat-expansion-panel-header style=\"position: absolute; right: 0px; top: 0px;\"></mat-expansion-panel-header>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <input matInput placeholder=\"Ticket name\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\"\n                        [(ngModel)]=\"newname\">\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <mat-label>Status</mat-label>\n                    <mat-select [(ngModel)]=\"newstatus\">\n                        <mat-option *ngFor=\"let status of statuses\"\n                            style=\"min-width: 320px ;max-width: 2048px; width: 100%;\" [(value)]=\"status.value\">\n                            {{status.view}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Cron Expression\" [(ngModel)]=\"newcron\">\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\">\n                    <mat-label>Time zone</mat-label>\n                    <mat-select [(ngModel)]=\"newtimezone\">\n                        <mat-option *ngFor=\"let tz of timezones\"\n                            style=\"min-width: 320px ;max-width: 2048px; width: 100%;\" [(value)]='tz.value'>\n                            {{tz.view}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Members\" [(ngModel)]=\"newmembers\">\n                    <div *ngIf=\"!addMemberSuccess && newmembers!=''\" class=\"alert alert-danger\">\n                        <div [hidden]=\"addMemberSuccess || newmembers===''\">\n                            Cannot find members {{ghostMembers}}\n                        </div>\n                    </div>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 2048px; width: 100%;\">\n                    <input matInput placeholder=\"Extra emails\" [(ngModel)]=\"newemails\"\n                        pattern=\"([a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}[;, ]{0,})+\" ngModel #emailref=\"ngModel\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"alert alert-danger\">\n                        <div [hidden]=\"!emailref.errors?.pattern\">\n                            Invalid email\n                        </div>\n                    </div>\n                </mat-form-field>\n            </div>\n            <div class=\"input-row\">\n                <mat-form-field class=\"my-form-field\" style=\"min-width: 320px ;max-width: 4000px; width: 100%;\">\n                    <textarea matInput placeholder=\"Description\" rows=\"5\" cols=\"40\"\n                        [(ngModel)]=\"newdescription\"></textarea>\n                </mat-form-field>\n            </div>\n        </mat-expansion-panel>\n    </mat-card-content>\n    <mat-card-actions align=\"end\">\n        <button mat-button routerLink=\"/ticket\">BACK</button>\n        <button mat-button (click)=\"handleSave()\" [disabled]=\"emailref.errors?.pattern\">SAVE</button>\n        <button mat-button (click)=\"openDialog()\">DELETE</button>\n    </mat-card-actions>\n</mat-card>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { TicketRequest } from '../_models/ticket-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SingleTicketService {\n  \n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n\n  ticketUrl = 'https://mysterious-reaches-08183.herokuapp.com/ticket';\n\n  userUrl = 'https://mysterious-reaches-08183.herokuapp.com/user/';\n\n  ticketRequest: TicketRequest = new TicketRequest();\n\n  constructor(private http: HttpClient) { }\n\n  getTicket(ticketId: String): Observable<any> {\n    return this.http.get(this.ticketUrl + '/' + ticketId, this.httpOptions);\n  }\n\n  getUsersInfoByUserIds(userIds: String[]): Observable<any> {\n    return this.http.get(`${this.userUrl}/id/${userIds}`, this.httpOptions);\n  }\n\n  putTicket(ticket: TicketInfo): Observable<any> {\n    this.ticketRequest.name = ticket.name;\n    this.ticketRequest.status = ticket.status;\n    this.ticketRequest.alert = ticket.alert;\n    this.ticketRequest.members = ticket.members;\n    this.ticketRequest.emails = ticket.emails;\n    this.ticketRequest.description = ticket.description;\n    return this.http.put<TicketInfo>(`${this.ticketUrl}/${ticket.ticketId}`, this.ticketRequest, this.httpOptions);\n  }\n  \n  deleteTicket(ticketId: String) : Observable<any> {\n    return this.http.delete(`${this.ticketUrl}/${ticketId}`,this.httpOptions);\n  }\n\n}\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { TicketsService } from './tickets.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { SearchService } from '../shared-data/search.service';\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-ticket',\n  templateUrl: './tickets.component.html',\n  styleUrls: ['./tickets.component.css']\n})\nexport class TicketsComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private ticketsService: TicketsService,\n    private searchService: SearchService) {\n    this.subscription = searchService.currentSearchBox.subscribe(\n      searchBox => {\n        this.searchBox = searchBox;\n        this.ticketsService.getAllTickets(this.pageIndex, this.pageSize, this.sortAttribute, this.direction).subscribe(\n          (result) => {\n            this.tickets = result.content;\n            this.totalPages = result.totalPages;\n          });\n      });\n  }\n\n  sortAttribute = 'name';\n  direction = 'ASC';\n  pageIndex = 0;\n  pageSize = 5;\n  totalPages = 0;\n  searchBox: string;\n  tickets: TicketInfo[];\n  subscription: Subscription;\n  displayedColumns: string[] = ['order', 'name', 'description', 'cron', 'timezone', 'mode', 'status'];\n\n  ngOnInit() {\n    this.getAllTickets();\n  }\n\n  getAllTickets() {\n    this.ticketsService.getAllTickets(this.pageIndex, this.pageSize, this.sortAttribute, this.direction).subscribe(\n      (result) => {\n        this.tickets = result.content;\n        this.totalPages = result.totalPages;\n      });\n  }\n\n  changeSort(sortAttribute: string) {\n    if (this.sortAttribute === sortAttribute) {\n      if (this.direction === 'ASC') {\n        this.direction = 'DESC';\n      }\n      else {\n        this.direction = 'ASC';\n      }\n    }\n    else {\n      this.sortAttribute = sortAttribute;\n      this.direction = 'ASC';\n    }\n    this.getAllTickets();\n  }\n\n  getNextPage() {\n    this.pageIndex = this.pageIndex + 1;\n    this.getAllTickets();\n  }\n\n  getPreviousPage() {\n    this.pageIndex = this.pageIndex - 1;\n    this.getAllTickets();\n  }\n\n  goToNewTicket() {\n    this.router.navigateByUrl('/new-ticket')\n  }\n\n  setAlert(ticket: TicketInfo) {\n    this.ticketsService.setAlert(ticket).subscribe((result) => {\n    });\n  }\n\n\n}\n\n","<button type=\"button\" class=\"btn btn-dark\" (click)=\"getAllTickets()\">\n    Refresh\n</button>\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"goToNewTicket()\">\n    Add ticket\n</button>\n<mat-table [dataSource]=\"tickets\" class=\"mat-elevation-z8\">\n\n    <!--- Note that these columns can be defined in any order.\n          The actual rendered columns are set as a property on the row definition\" -->\n\n    <ng-container matColumnDef=\"order\">\n        <mat-header-cell *matHeaderCellDef>Order</mat-header-cell>\n        <mat-cell *matCellDef=\"let element; let i = index\"> {{i+1+pageIndex*pageSize}} \n            <a fxFlexFill\n                [routerLink]=\"'/ticket/'+element.ticketId\" class=\"mat-row-link\"></a>\n        </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef fxFlex=\"50\"> \n            <button mat-button (click)=\"changeSort('name')\">Name</button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" fxFlex=\"50\"> <span class=\"ellipsis\">{{element.name}} </span></mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef> \n            <button mat-button (click)=\"changeSort('status')\">Status</button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> <span class=\"ellipsis\">{{element.status}} </span></mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"mode\">\n        <mat-header-cell *matHeaderCellDef> \n            <button mat-button (click)=\"changeSort('alert.mode')\">Mode</button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\">\n            <mat-slide-toggle [(ngModel)]='element.alert.mode' style=\"padding-left: 10px;\" (change)=\"setAlert(element)\">\n            </mat-slide-toggle>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"cron\">\n        <mat-header-cell *matHeaderCellDef> \n            <button mat-button (click)=\"changeSort('alert.cronExpression')\">Cron</button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.alert.cronExpression}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"timezone\">\n        <mat-header-cell *matHeaderCellDef> \n            <button mat-button (click)=\"changeSort('alert.timezone')\">Time zone</button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\"> {{element.alert.timezone}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n        <mat-header-cell *matHeaderCellDef fxFlex=\"50\"> \n            <button mat-button (click)=\"changeSort('description')\">Description </button>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let element\" fxFlex=\"50\"> <span class=\"ellipsis\">{{element.description}} </span>\n        </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n<div>\n    <button mat-button class=\"btn btn-dark\" (click)=\"getPreviousPage()\" [disabled]=\"pageIndex===0\">\n        BACK\n    </button>\n    <button mat-button class=\"btn btn-dark\" (click)=\"getNextPage()\"\n        [disabled]=\"pageIndex===(totalPages-1) || totalPages===0\">\n        NEXT\n    </button>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TicketRequest } from '../_models/ticket-request';\nimport { TicketInfo } from '../_models/ticket-info';\nimport { SearchService } from '../shared-data/search.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketsService {\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-type': 'application/json'\n    }),\n    withCredentials: true\n  };\n\n  ticketUrl = 'https://mysterious-reaches-08183.herokuapp.com/ticket';\n  ticketRequest: TicketRequest = new TicketRequest();\n  searchBox: string = '';\n  constructor(private http: HttpClient, private searchService: SearchService) {\n\n  }\n  getAllTickets(pageIndex: number, pageSize: number, sortAttribute: string, direction: string): Observable<any> {\n    this.searchService.currentSearchBox.subscribe(searchBox => this.searchBox = searchBox);\n    return this.http.get(`${this.ticketUrl}?searchBox=${this.searchBox}&page=${pageIndex}&size=${pageSize}&sort=${sortAttribute},${direction}`, this.httpOptions);\n  }\n\n  setAlert(ticket: TicketInfo): Observable<any> {\n    this.ticketRequest.alert = ticket.alert;\n    this.ticketRequest.description = ticket.description;\n    this.ticketRequest.emails = ticket.emails;\n    this.ticketRequest.name = ticket.name;\n    this.ticketRequest.status = ticket.status;\n    this.ticketRequest.members = ticket.members;\n    return this.http.put(`${this.ticketUrl}/${ticket.ticketId}`, this.ticketRequest, this.httpOptions);\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}